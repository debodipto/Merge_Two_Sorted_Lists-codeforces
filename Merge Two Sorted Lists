# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        # create a dummy head node
        dummy = ListNode()
        # set current to the dummy head node
        current = dummy
        # while both l1 and l2 nodes exist
        while l1 and l2:
            # if l1's value is less than or equal to l2's value
            if l1.val <= l2.val:
                # set current's next to l1
                current.next = l1
                # set l1 to its next
                l1 = l1.next
            # otherwise
            else:
                # set current's next to l2
                current.next = l2
                # set l2 to its next
                l2 = l2.next
            # set current to its next
            current = current.next
        # if l1 exists
        if l1:
            # set current's next to l1
            current.next = l1
        # if l2 exists
        if l2:
            # set current's next to l2
            current.next = l2
        # return the next node after the dummy head node (which is the merged sorted list)
        return dummy.next
